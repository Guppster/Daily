extern crate rand;

use std::io;
use std::cmp::Ordering;
use std::env;
use rand::Rng;

fn main()
{
	let (args, result) = shuffle(env::args().collect(), vec!(1, 2, 3, 4, 5));

	for y in result.iter() 
	{
    	println!("{}", y);
	}
}//End of main

fn shuffle(args: Vec<_>, result: Vec<_>) -> (Vec<_>, Vec<_>)
{
	while args.len() > 1 
	{
		let mut n = rand::thread_rng().gen_range(1, args.len());
		result.push(args.swap_remove(n));
	}

	return (args, result);
}//End of shuffle function