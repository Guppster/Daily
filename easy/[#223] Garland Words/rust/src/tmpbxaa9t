struct Garland<'w> 
{
    word: &'w str,
    degree: usize
}

fn main() 
{
    for word in std::env::args().skip(1)
    {
    	match garland(&word) 
    	{
            Some(garland) => println!("{}: {}", garland.word, garland.degree),
            None => println!("{} is not a garland word", word)
        }
    }

}//End of main method

//Returns the degree if s is a garland word, and 0 otherwise
fn garland(s: &str) -> Option<Garland>
{
	match (0..s.len()).map(|d| &s[..d] == &s[s.len()-d..]).rposition(|b| b) 
   	{
        Some(n) => Some(Garland {
                word: s,
                degree: n
            }),
        None    => n
    }
}
